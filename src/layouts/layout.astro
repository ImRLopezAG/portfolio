---
const { content } = Astro.props;
import Footer from '@components/pages/footer.astro';
import Head from '@components/pages/head.astro';
import Navbar from '@components/pages/navbar.astro';
import { Toaster } from 'sonner';
---

<html lang='en'>
  <Head content={content} />
  <body class='bg-background text-foreground antialiased'>
    <main class='min-h-screen flex flex-col'>
      <Navbar />
      <slot />
      <Footer />
      <Toaster position='top-center' closeButton richColors client:idle />
    </main>
  </body>
</html>
<script is:inline>
  const getThemePreference = () => {
    
    if (typeof localStorage !== 'undefined') {
      const storedTheme = localStorage.getItem('theme');
      if (storedTheme) return storedTheme;
    }

    const prefersDarkMode = window.matchMedia(
      '(prefers-color-scheme: dark)'
    ).matches;
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', prefersDarkMode ? 'dark' : 'light');
    }
    return prefersDarkMode ? 'dark' : 'light';
  };

  const applyThemeClass = (isDark) => {
    document.documentElement.classList.toggle('dark', isDark);
  };

  const initializeTheme = () => {
    const isDark = getThemePreference() === 'dark';
    applyThemeClass(isDark);

    if (typeof localStorage !== 'undefined') {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class'],
      });
    }
  };

  initializeTheme();
</script>
<script is:inline>
  function applyTheme() {
    localStorage.theme === 'dark'
      ? document.documentElement.classList.add('dark')
      : document.documentElement.classList.remove('dark');
  }

  document.addEventListener('astro:after-swap', applyTheme);
  applyTheme();
</script>
