---
const { content } = Astro.props;
import Footer from '@components/pages/footer.astro';
import Head from '@components/pages/head.astro';
import Navbar from '@components/pages/navbar.astro';
import { Toaster } from 'sonner';
---

<html lang='en'>
  <Head content={content} />
  <body class='bg-background text-foreground antialiased'>
    <main class='min-h-screen flex flex-col bg-background'>
      <Navbar />
      <div class='flex-1'>
        <slot />
      </div>
      <Footer />
      <Toaster position='top-center' closeButton richColors client:idle />
    </main>
  </body>
</html>
<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    });
  }
</script>
<script is:inline>
  function applyTheme() {
    localStorage.theme === 'dark'
      ? document.documentElement.classList.add('dark')
      : document.documentElement.classList.remove('dark');
  }

  document.addEventListener('astro:after-swap', applyTheme);
  applyTheme();
</script>
